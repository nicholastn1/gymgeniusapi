name: "Ruby on Rails CI"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  RUBY_VERSION: '3.2.2'
  RAILS_ENV: test
  POSTGRES_DB: rails_test
  POSTGRES_USER: rails
  POSTGRES_PASSWORD: password
  DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
  RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
  SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Create credentials file
        run: |
          mkdir -p config/credentials
          echo "${{ secrets.RAILS_MASTER_KEY }}" > config/master.key
          echo "test:
            secret_key_base: ${{ secrets.SECRET_KEY_BASE }}" > config/credentials/test.yml.enc

      - name: Set up database
        run: bundle exec rails db:schema:load

      - name: Run tests
        run: bundle exec rake

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true

      - name: Create credentials file
        run: |
          mkdir -p config/credentials
          echo "${{ secrets.RAILS_MASTER_KEY }}" > config/master.key
          echo "test:
            secret_key_base: ${{ secrets.SECRET_KEY_BASE }}" > config/credentials/test.yml.enc

      - name: Run security checks
        run: |
          bundle exec bundler-audit --update
          bundle exec brakeman -q -w2

      - name: Run Rubocop
        run: bundle exec rubocop --parallel
